{
    "swagger": "2.0",
    "info": {
        "description": "This is eKOSORA, an Academics management system. The next URUBUTO but better.",
        "version": "1.0.0",
        "title": "eKOSORA",
        "contact": {
            "email": "ishimvainqueur@gmail.com"
        },
        "licence": {
            "name": "MIT License"
        }
    },
    "host": "localhost:80",
    "basePath": "/",
    "tags": [
        {
            "name": "auth",
            "description": "authentication related apis"
        },
        {
            "name": "student",
            "description": "student related apis"
        },
        {
            "name": "educator",
            "description": "educator related apis"
        },
        {
            "name": "parent",
            "description": "parent related apis"
        },
        
        {
            "name": "announcement",
            "description": "announcement related apis"
        },
        {
            "name": "settings",
            "description": "setting related apis"
        }
    ],
    "schemes": ["http"],
    "paths": {
        "/login/check": {
            "post": {
                "tags": ["auth"],
                "summary": "Authenticate user logging in",
                "description": "Checking credentials when trying to login",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "User info object",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/loginBody"
                    }
                }],
                "security": {
                    "cookieAuth": ["jwt"]
                },
                "responses": {
                    "200": {
                        "description": "Successfully logged in \n Note: Not all everything in the response below will be given. This will depend on the type of account",
                        "schema": {
                            "$ref": "#/definitions/loginResponse"
                        }
                    }
                }
            }
        },
        "logout": {
            "get": {
                "tags": ["auth"],
                "summary": "Log out of the system",
                "description": "Logs out of the system  and all cookies are removed",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "schema": {
                            "$ref": "#/definitions/logoutResponse"
                        }
                    }
                }
            }
        },
        "student/register": {
            "post": {
                "tags": ["student"],
                "summary": "Add student to the database",
                "description": "This route can only be used by educators with the respective cookies to add new students to the database",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "required": true,
                    "description": "New student info object",
                    "schema": {
                        "$ref": "#/definitions/newStudentBody"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added a new student to the database",
                        "schema": {
                            "$ref": "#/definitions/newStudent200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong in the server or the database",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/student/view": {
            "get": {
                "tags": ["student"],
                "summary": "Get all the students in the database",
                "description": "A full list of all students saved in the database and some info about them",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Successfully fetched all the students",
                        "schema": {
                            "$ref": "#/definitions/viewStudents200Response"
                        }
                    },
                    "500": {
                        "description": "In case an error occured while trying to fetch all the students",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "student/edit?id": {
            "post": {
                "tags": ["student"],
                "summary": "Edit a student's info",
                "description": "You can edit a student's personal info like names, class, or email",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "required": true,
                    "description": "An object containing the new student info",
                    "schema": {
                        "$ref": "#/definitions/editStudentBody"
                    }
                    
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "description": "The _id of the student whose information needs to be changed"
                        
                    }],
                "responses": {
                    "200": {
                        "description": "Succesfully edited the student's info",
                        "schema": {
                            "$ref": "#/definitions/editStudent200Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nPossible mistakes include: not including the student's id in the query parameters, passing an invalid id, ...",
                        "schema": {
                            "$ref": "#/definitions/editStudent400Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "student/addRecord": {
            "post": {
                "tags": ["student"],
                "summary": "Add record to all students",
                "description": "Add a record [Eg: Quiz, test, exam] to all the students of a specified class and specified subject",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "New record body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/addRecordBody"
                    }

                }],
                "responses": {
                    "200": {
                        "description": "Successfully added the new record to all students of the class",
                        "schema": {
                            "$ref": "#/definitions/addRecord200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/student/updateMark":{
            "post": {
                "tags": ["student"],
                "summary": "Update one student's mark",
                "description": "You can change only one student's mark on a certain record",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "required": true,
                    "description": "Updated mark object",
                    "schema":{
                        "$ref": "#/definitions/updateMarkBody"
                    }

                }],
                "responses": {
                    "200": {
                        "description": "Succesfully updated the student's mark",
                        "schema": {
                            "$ref": "#/definitions/updateMark200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/student/updateForMany": {
            "post": {
                "tags": ["student"],
                "summary": "Update many student's marks at once",
                "description": "Add or remove a specified number of marks on a specified record for multiple students",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "required": true,
                    "description": "The new marks object",
                    "schema": {
                        "$ref": "#/definitions/updateForManyBody"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully updated the students' marks",
                        "schema": {
                            "$ref": "#/definitions/updateForMany200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/student/getRecords": {
            "get": {
                "tags": ["student"],
                "summary": "Get all records of a class",
                "description": "Returns all the records of a certain class in a certain subject",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "query",
                    "name": "year",
                    "required": true,
                    "description": "The academic year of the class",
                    "schema": {
                        "$ref": "#/definitions/getRecordsYearQuery"
                    }
                    }, 
                    {
                        "in": "query",
                        "name": "class",
                        "required": true,
                        "description": "The class label",
                        "schema": {
                            "$ref": "#/definitions/getRecordsClassQuery"
                        }
                    },
                    {
                        "in": "query",
                        "name": "subject",
                        "required": true,
                        "description": "The class label",
                        "schema": {
                            "$ref": "#/definitions/getRecordsSubjectQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all the records in the specified class and subject",
                        "schema": {
                            "$ref": "#/definitions/getRecords200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/student/deleteRecord": {
            "delete": {
                "tags": ["student"],
                "summary": "Delete a record",
                "description": "Delete a record from all students who have that particular records",
                "produces":[ "application/json" ],
                "parameters": [{
                    "in": "query",
                    "name": "_id",
                    "description": "The _id of the record in question",
                    "schema": {
                        "$ref": "#/definitions/deleteRecordIdQuery"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the record",
                        "schema": {
                            "$ref": "#/definitions/deleteRecord200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/student/addParent": {
            "post": {
                "tags": ["student"],
                "summary": "Add a parent",
                "description": "Add a parent email to a student's account so that they get notified of changes in the student's performance",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "the addParent object",
                    "schema": {
                        "$ref": "#/definitions/addParentBody"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added the new parent email",
                        "schema": {
                            "$ref": "#/definitions/addParent200Response"
                        }
                    },
                    "404":{
                        "description": "Student not found",
                        "schema": {
                            "$ref": "#/definitions/404IdResponse"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/student/getMarks": {
            "post": {
                "tags": ["student"],
                "summary": "Get all the marks of a student",
                "description": "Returns the marks of a student",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "Request body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/getMarksBody"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Returns the required results",
                        "schema": {
                            "$ref": "#/definitions/getMarks200Response"
                        }
                    },
                    "404": {
                        "description": "All the sent _ids don't exist in the database",
                        "schema": {
                            "$ref": "#/definitions/404IdResponse"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/student/getSummary": {
            "post": {
                "tags": ["student"],
                "summary": "Get Summary of Lessons and Performance to make a chart or do statistics",
                "description": "Returns data about all of the subjects that a teacher teaches and the summary of all the students' performance in said subjects",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "required": true,
                    "description": "Body containing the required info",
                    "schema": {
                        "$ref": "#/definitions/getSummaryBody"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the summary",
                        "schema": {
                            "$ref": "#/definitions/getSummary200Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request: The subjects array is empty or not present",
                        "schema": {
                            "$ref": "#/definitions/getSummary400Response"
                        }
                    }
                }

            }
        },
        "/educator/register": {
            "post": {
                "tags": ["educator"],
                "summary": "Register a new educator",
                "description": "Add a new educator to the system\nNB: This is only usable by users with the 'admin' title",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "All the info about the new educator",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/registerEducatorBody"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added the new educator to the database",
                        "schema": {
                            "$ref": "#/definitions/registerEducator200Response"
                        }
                    },
                    "403": {
                        "description": "Only admin users can register new educators",
                        "schema": {
                            "$ref": "#/definitions/registerEducator403Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/educator/view": {
            "get": {
                "tags": ["educator"],
                "summary": "Get a list of all the educators",
                "description": "Returns an array of all the educators registered in the system",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the array of educators",
                        "schema": {
                            "$ref": "#/definitions/viewEducators200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/educator/edit": {
            "post": {
                "tags": ["educator"],
                "summary": "Edit the info of an educator",
                "description": "Edit an educator's info",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "query",
                    "name": "_id",
                    "description": "The _id of the educator",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/editEducatorIdQuery"
                    }
                },{
                    "in": "body",
                    "name": "body",
                    "description": "The new educator info object",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/editEducatorBody"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully updated the educator's info",
                        "schema": {
                            "$ref": "#/definitions/editEducator200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/parent/getParentInfo": {
            "post": {
                "tags": ["parent"],
                "summary": "Get info about one parent",
                "description": "Get a parent's personal information",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "The body of the request",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/getParentInfoBody"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the parent's info",
                        "schema": {
                            "$ref": "#/definitions/getParentInfo200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    },
                    "404": {
                        "description": "Invalid or Unknown _id",
                        "schema": {
                            "$ref": "#/definitions/404IdResponse"
                        }
                    }
                }
            }
        },
        "/parent/signup": {
            "post": {
                "tags": ["parent"],
                "description": "Add a parent to the database with their respective credentials and contact",
                "summary": "Set parent's credentials",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "the request body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/parentSignupBody"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully set the parent's user info",
                        "schema": {
                            "$ref": "#/definitions/parentSignup200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/announcement/add": {
            "post": {
                "tags": ["announcement"],
                "summary": "Create a new announcement",
                "description": "Add a new announcement to the database",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "the request body",
                    "schema": {
                        "$ref": "#/definitions/addAnnouncementBody"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully added the new announcement",
                        "schema": {
                            "$ref": "#/definitions/addAnnouncement200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/announcement/view": {
            "get": {
                "tags": ["announcement"],
                "summary": "Get announcements",
                "description": "Get all announcements reserved for a certain group",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the array of announcements",
                        "schema": {
                            "$ref": "#/definitions/viewAnnouncement200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        },
        "/settings/newProfile": {
            "post": {
                "tags": ["settings"],
                "summary": "Change the profile of a user",
                "description": "Upload a new profile for a specified user",
                "consumes": ["multipart/form-data"],
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "file",
                        "description": "The new profile file",
                        "type": "file"
                    },
                    {
                        "in": "formData",
                        "name": "_id",
                        "description": "The _id of the user",
                        "type": "string",
                        "example": "6256f357e0f8e569651cae98"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully changed the user's profile",
                        "schema": {
                            "$ref": "#/definitions/newProfile200Response"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
                
            }
        },
        "/settings/updateSettings/:id": {
            "post": {
                "tags": ["settings"],
                "summary": "Update a user's settings",
                "description": "Change a user's info",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [{
                    "in": "params",
                    "name": "id",
                    "description": "The user's id",
                    "required": true,
                    "type": "string",
                    "example": "6256f357e0f8e569651cae98"
                }, {
                    "in": "body",
                    "name": "body",
                    "description": "The new info about the user",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/updateSettingsBody"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully updated the user's info",
                        "schema": {
                            "$ref": "#/definitions/200SucessWithDocResponse"
                        }
                    },
                    "500": {
                        "description": "Something went wrong on the server side",
                        "schema": {
                            "$ref": "#/definitions/500Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "loginBody": {
            "type": "object",
            "properties": {
                "accountType": {
                    "type": "string",
                    "example": "student"
                },
                "code": {
                    "type": "string",
                    "example": "RCA0322RJU"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "loginResponse": {
            "type": "object",
            "properties": {
                "names":{
                    "type": "string",
                    "example": "ISHIMWE Vainqueur"
                },
                "_id":{
                    "type": "string",
                    "example": "6270f357e0f8e569651cae43"
                },
                "code":{
                    "type": "string",
                    "example": "RCA0231KIS"
                },
                "email":{
                    "type": "string",
                    "example": "ishimvainqueur@gmail.com"
                },
                "title":{
                    "type": "string",
                    "example": "none"
                },
                "tel":{
                    "type": "string",
                    "example": "+2507884294132"
                },
                "parentEmails":{
                    "type": "array",
                    "example": ["father@gmail.com", "mother@gmail.com"]
                },
                "lessons":{
                    "type": "array",
                    "description": "Only for teachers",
                    "example": ["JS", "WUI"]
                },
                "class":{
                    "type": "object",
                    "example": {
                        "class": "A",
                        "year": 1
                    }
                },
                "profileLink":{
                    "type": "string",
                    "example": "http://google.com/yourprofile.png"
                },
                "accountType":{
                    "type": "string",
                    "example": "student"
                },
                "children":{
                    "type": "array",
                    "example": ["son@gmail.com", "daughter@gmail.com"]
                }
            }
        },
        "logoutResponse":{
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                }
            }
        },
        "newStudentBody": {
            "type": "object",
            "required": ["names", "code", "class", "email"],
            "properties": {
                "names": {
                    "type": "string",
                    "example":"ISHIMWE Vainqueur" 
                },
                "code": {
                    "type": "",
                    "example": "RCA0231KIS"
                },
                "class": {
                    "type": "object",
                    "example": {
                        "year": 1,
                        "class": "E"
                    }
                },
                "email": {
                    "type": "string",
                    "example": "ishimvainqueur@gmail.com"
                }
            }
        },
        "newStudent200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                }
            }
        },
        "viewStudents200Response":{
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                },
                "doc": {
                    "type": "array",
                    "example": [
                        {
                            "names": "ISHIMWE Vainqueur",
                            "class": {
                                "year": 1,
                                "class": "E"
                            },
                            "email": "ishimvainqueur@gmail.com",
                            "parentEmails": ["father@gmail.com", "mother@gmail.com"],
                            "profileLink": "http://google.com/profile.png"

                        },
                        {
                            "names": "Not ISHIMWE Vainqueur",
                            "class": {
                                "year": 1,
                                "class": "C"
                            },
                            "email": "notishimvainqueur@gmail.com",
                            "parentEmails": ["notfather@gmail.com", "notmother@gmail.com"],
                            "profileLink": "http://google.com/notprofile.png"

                        }
                    ]
                }
            }
        },
        "editStudentBody": {
            "type": "object",
            "required": ["parentEmails","names","code","class","email"],
            "properties": {
                "parentEmails": {
                    "type": "array",
                    "example": ["father_new@gmail.com", "mother@gmail.com"]
                },
                "names": {
                    "type": "string",
                    "example": "ISHIMWE Victor"
                },
                "code": {
                    "type": "string",
                    "example": "RCA0231KIL"
                },
                "class": {
                    "type": "object",
                    "example": {
                        "class": "F",
                        "year": 1
                    }
                },
                "email": {
                    "type": "string",
                    "example": "ishimvictor@gmail.com"
                }

            }
        },
        "editStudent200Response":{
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                }
            }
        },
        "editStudent400Response":{
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#MissingID"
                }
            }
        },
        "500Response":{
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#InternalServerError"
                },
                "message": {
                    "type": "object",
                    "example": {
                        "error": "MongoError",
                        "message": "Connection timeout"
                    }
                }
            }
        },
        "addRecordBody": {
            "type": "object",
            "required": ["date", "recordName", "max", "subject", "year"],
            "properties": {
                "date": {
                    "type": "date",
                    "example": 1652156083147
                },
                "recordName": {
                    "type": "string",
                    "example": "Maths Pop Quiz"
                },
                "max": {
                    "type": "number",
                    "example": 40
                },
                "reversed": {
                    "type": "boolean",
                    "example": true
                },
                "subject": {
                    "type": "string",
                    "example": "MTC"
                },
                "year": {
                    "type": "number",
                    "example": 1
                }
            }
        },
        "addRecord200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                }
            }
        },
        "updateMarkBody": {
            "type": "object",
            "required": ["recordId", "studentId", "mark"],
            "properties": {
                "recordId": {
                    "type": "string",
                    "example": "6270f357e0f8e569651cae43"
                },
                "studentId": {
                    "type": "string",
                    "example": "6270f357e0f8e569651cae43"
                },
                "mark": {
                    "type": "number",
                    "example": 12
                }
            }
        },
        "updateMark200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                },
                "doc": {
                    "type": "object"
                }
            }
        },
        "updateForManyBody": {
            "type": "object",
            "required": ["recordId", "students", "mark", "educatorId"],
            "properties": {
                "recordId": {
                    "type": "string",
                    "example": "6270f357e0f8e569651cae43"
                },
                "students": {
                    "type": "array",
                    "example": ["6270f357e0f8e569651cae43", "6270f357e0f8e569651cffd4", "6256f357e0f8e569651cae98"]
                },
                "mark": {
                    "type": "number",
                    "example": 4
                },
                "notifyParents": {
                    "type": "boolean",
                    "example": true
                },
                "educatorId": {
                    "type": "string",
                    "example": "6270f357e0f8e569651cae43"
                }
            }
        },
        "updateForMany200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                },
                "doc": {
                    "type": "object"
                }
            }
        },
        "getRecordsYearQuery": {
            "type": "number",
            "example": 1
        },
        "getRecordsClassQuery": {
            "type": "string",
            "example": "A"
        },
        "getRecordsSubjectQuery": {
            "type": "string",
            "example": "MTC"
        },
        "getRecords200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                },
                "records": {
                    "type": "array",
                    "example": []
                }
            }
        },
        "deleteRecordIdQuery": {
            "type": "string",
            "example": "6270f357e0f8e569651cae43"
        },
        "deleteRecord200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                }
            }
        },
        "addParent200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                }
            }
        },
        "404IdResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#NoSuchID"
                },
                "message": {
                    "type": "string",
                    "example": "There is no student with the provided _id"
                }
            }
        },
        "getMarksBody": {
            "type": "object",
            "required": ["ids"],
            "properties": {
                "ids": {
                    "type": "array",
                    "example": ["6270f357e0f8e569651cae43", "6270f357e0f8e569651cae43"]
                }
            }
        },
        "getMarks200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                },
                "doc": {
                    "type": "array",
                    "example": []
                }
            }
        },
        "getSummaryBody": {
            "type": "object",
            "properties": {
                "lessons": {
                    "type": "array",
                    "example": ["MTC", "PHY"]
                }
            }
        },
        "getSummary200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                },
                "doc": {
                    "type": "object",
                    "example": {}
                }
            }
        },
        "getSummary400Response": {
            "type": "object",
            "properties": {
                "code":{
                    "type":  "string",
                    "example": "#EmptyOrNullLessonsArray"
                }
            }
        },
        "registerEducatorBody": {
            "type": "object",
            "required": ["names", "title", "lessons", "email", "tel"],
            "properties": {
                "names": {
                    "type": "string",
                    "example": "Educator IV"
                },
                "code": {
                    "type": "string",
                    "example": "0000"
                },
                "title": {
                    "type": "string",
                    "example": "admin"
                },
                "lessons": {
                    "type": "array",
                    "example": ["PHP", "WUI", "FOD"]
                },
                "email": {
                    "type": "string",
                    "example": "notmyemail@gmail.com"
                },
                "tel": {
                    "type": "string",
                    "example": "+2507884294132"
                }
            }
        },
        "registerEducator200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                }
            }
        },
        "registerEducator403Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#NoPrivileges"
                },
                "message": {
                    "type": "string",
                    "example": "This feature is reserved for admin educators"
                }
            }
        },
        "viewEducators200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                },
                "doc": {
                    "type": "array",
                    "example": []
                }
            }
        },
        "editEducatorBody": {
            "type": "object",
            "properties": {
                "names": {
                    "type": "string",
                    "example": "Not IV"
                },
                "code": {
                    "type": "string",
                    "example": "0000"
                },
                "title": {
                    "type": "string",
                    "example": "admin"
                },
                "lessons": {
                    "type": "array",
                    "example": []
                },
                "email": {
                    "type": "string",
                    "example": "notiv@gmail.com"
                },
                "tel": {
                    "type": "string",
                    "example": "+2507884294132"
                }
            }
        },
        "editEducator200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                }
            }
        },
        "editEducatorIdQuery": {
            "type": "string",
            "example": "6270f357e0f8e569651cae43"
        },
        "getParentInfoBody": {
            "type": "object",
            "required": ["_id"],
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "6270f357e0f8e569651cae43"
                }
            }
        },
        "getParentInfo200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                },
                "doc": {
                    "type": "object",
                    "example": {}
                }
            }
        },
        "parentSignupBody": {
            "type": "object",
            "required": ["names", "tel", "password"],
            "properties": {
                "names": {
                    "type": "string",
                    "example": "Father Of IV"
                },
                "tel": {
                    "type": "string",
                    "example": "+2507884294132"
                },
                "password": {
                    "type": "string",
                    "example": "someVerySecretPassword"
                }
            }
        },
        "parentSignup200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                }
            }
        },
        "addAnnouncementBody": {
            "type": "object",
            "required": ["composer_id", "title", "content", "meantFor"],
            "properties": {
                "composer_id": {
                    "type": "string",
                    "example": "6270f357e0f8e569651cae43"
                },
                "title": {
                    "type": "string",
                    "example": "General Announcement"
                },
                "content": {
                    "type": "string",
                    "example": "Something that everyone needs to know"
                },
                "meantFor": {
                    "type": "array",
                    "example": ["educator", "parents"]
                },
                "expiry": {
                    "type": "date",
                    "example": 1652647199001
                }
            }
        },
        "addAnnouncement200Response":  {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                }
            }
        },
        "viewAnnouncement200Response":  {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                },
                "doc": {
                    "type": "array",
                    "example": []
                }
            }
        },
        "200SuccessfullProcessResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                }
            }
        },
        "200SucessWithDocResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                },
                "doc": {
                    "type": "object",
                    "example": {}
                }
            }
        },
        "newProfile200Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "#Success"
                },
                "url": {
                    "type": "string",
                    "example": "http://res.cloudinary.com/dyrneab5i/image/upload/v1650316299/pouqczj3j4wrm74p3rn5.jpg"
                }
            }
        }
    }
}
